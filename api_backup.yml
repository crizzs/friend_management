tags:
  - name: Friend Management
    description: A set of backend-services for friendship management
paths:
  '/addFriend':
      post:
          summary: Connects a friendship between 2 persons through email.
          tags:
            -  Add Friend
          description: Adds a friendship between 2 emails. 
          operationId: addFriendship
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
            - in: body
              name: body
              description: A JSON of two emails who wants to be friends.
              required: true
              schema:
                $ref: "#/definitions/Friend"
          responses:
              200:
                description: Successful response. 
                schema:
                  type: string
  '/listAllFriends':
      post:
          summary: Retrieves an entire list of friends for a user.
          tags:
            -  List all friends
          description: List friends of a particular user using email. 
          operationId: listAllFriends
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
            - in: body
              name: body
              description: A request body containing an email.
              required: true
              schema:
                $ref: "#/definitions/listFriend"
          responses:
              200:
                description: Successful response. 
                schema:
                  type: string
  '/findMutualFriends':
      post:
          summary: Retrieves an entire list of mutual friends between 2 users.
          tags:
            -  Find Mutual Friends
          description: Mutual Friends between 2 emails. 
          operationId: friendMutualFriends
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
            - in: body
              name: body
              description: A JSON of two emails who wants to find mutual friends.
              required: true
              schema:
                $ref: "#/definitions/Friend"
          responses:
              200:
                description: Successful response. 
                schema:
                  type: string
  '/subscribeUpdates':
      post:
          summary: Subscribe to updates from another person.
          tags:
            -  Subscribe to updates
          description: One user (requestor) subscribing updates of another person(target). 
          operationId: subscribeUpdates
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
            - in: body
              name: body
              description: A JSON containing a requestor and target.
              required: true
              schema:
                $ref: "#/definitions/subscribeUpdates"
          responses:
              200:
                description: Successful response. 
                schema:
                  type: string
  '/blockReceivingUpdates':
      post:
          summary: Block updates from being sent from targeted email.
          tags:
            -  Blocks receiving updates from targeted email
          description: One user (requestor) blocking updates from another person(target). 
          operationId: blockReceivingUpdates
          consumes:
            - application/json
          produces:
            - application/json
          parameters:
            - in: body
              name: body
              description: A JSON containing a requestor and target.
              required: true
              schema:
                $ref: "#/definitions/blockUpdates"
          responses:
              200:
                description: Successful response. 
                schema:
                  type: string
definitions:
    Friend:
      required:
        - friends
      properties:
        friends:
          type: array
          items:
            type: string
          example: ['andy@example.com','john@example.com']
    listFriend:
      required:
        - email
      properties:
        email:
          type: string
          example: 'andy@example.com'
    subscribeUpdates:
      required:
        - requestor
        - target
      properties:
        requestor:
          type: string
          example: 'lisa@example.com'
        target:
          type: string
          example: 'john@example.com'
    blockUpdates:
      required:
        - requestor
        - target
      properties:
        requestor:
          type: string
          example: 'andy@example.com'
        target:
          type: string
          example: 'john@example.com'                      